
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Объект.Ссылка.Пустая() Тогда 
		Объект.ТекущаяРозничнаяЦена = РаботаСЦенами.ПолучитьЦенуТовараУслуги(Объект.Ссылка);
	КонецЕсли; 
	
	Если Объект.Ссылка.Пустая() Тогда 	
		Объект.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар");
		Объект.СчетБухгалтерскогоУчета = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Товары");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЦену(Команда)
	Если Объект.Ссылка.Пустая() Тогда 
		Сообщить("Перед установкой цены необходимо записать документ!");
	Иначе
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСозданияЦены",Новый Структура(
		"Номенклатура", Объект.Ссылка),,,,, 
		Новый ОписаниеОповещения("ПослеИзмененияЦены", ЭтаФорма),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзмененияЦены(Результат, ДополнительныеПараметры) Экспорт    
Объект.ТекущаяРозничнаяЦена =  РаботаСЦенами.ПолучитьЦенуТовараУслуги(Объект.Ссылка);
КонецПроцедуры 


&НаКлиенте
Процедура УстановитьВидимость()
	
	Если Объект.Родитель = ПредопределенноеЗначение("Справочник.Номенклатура.Услуга") Тогда
		Элементы.ДлительностьУслуги.Видимость = Истина;
	Иначе 
		Элементы.ДлительностьУслуги.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры // УстановитьВидимость()

&НаКлиенте
Процедура СчетБухгалтерскогоУчетаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СписокДоступныхЗначений = Новый СписокЗначений;
	
	Если Объект.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар") Тогда 
		СписокДоступныхЗначений.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Материалы"));
		СписокДоступныхЗначений.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Товары"));
	ИначеЕсли  Объект.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда 
		СписокДоступныхЗначений.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасходыНаПродажу"));
		СписокДоступныхЗначений.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПрочиеДоходыИРасходы"));
	Иначе
		СписокДоступныхЗначений.Добавить(ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ПустаяСсылка"));
	КонецЕсли;
	
	ДанныеВыбора = СписокДоступныхЗначений;
	
		
	
	
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьСчетаБухУчета()

	Если Объект.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Материал")Тогда 
		Объект.СчетБухгалтерскогоУчета = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Материалы");
	ИначеЕсли Объект.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар") Тогда 
		Объект.СчетБухгалтерскогоУчета = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.Товары");
	ИначеЕсли Объект.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга") Тогда 
		Объект.СчетБухгалтерскогоУчета = ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.РасходыНаПродажу");
	КонецЕсли;
	
КонецПроцедуры // УстановитьВидимостьСчетаБухУчета()

&НаКлиенте
Процедура ТипНоменклатурыПриИзменении(Элемент)
	УстановитьВидимостьСчетаБухУчета();	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры
