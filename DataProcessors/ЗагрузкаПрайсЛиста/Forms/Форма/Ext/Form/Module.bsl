
&НаКлиенте
Процедура ЗагрузитьПрайсЛист(Команда)
	СкопироватьФайлНаСервер();
КонецПроцедуры

//&НаКлиенте
//Процедура ОткрытьФормуСписка()

//	ОткрытьФорму("Документ.УстановкаЦенПоставщика.Форма.ФормаСписка").Открыть();

//КонецПроцедуры // ОткрытьФормуСписка()


&НаКлиенте
Процедура СкопироватьФайлНаСервер()

	ОповещениеОЗавершении = Новый ОписаниеОповещения("СкопироватьФайлНаСерверЗавершение", ЭтотОбъект);
	НачатьПомещениеФайлаНаСервер(ОповещениеОЗавершении,,,,,УникальныйИдентификатор);

КонецПроцедуры // СкопироватьФайлНаСервер()


&НаКлиенте
Процедура СкопироватьФайлНаСерверЗавершение(ОписаниеПомещенногофайла, ДополнительныеПараметр) Экспорт
	
	Если ОписаниеПомещенногофайла <> Неопределено Тогда
		
		АдресФайлаВХранилище = ОписаниеПомещенногофайла.Адрес;
		ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, Поставщик);
		
	КонецЕсли;
	
	//ОткрытьФормуСписка();

КонецПроцедуры // СкопироватьФайлНаСерверЗавершение()


&НаСервереБезКонтекста
Процедура ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, Поставщик)

	ТабДок = ПрочитатьФайл(АдресФайлаВХранилище);
	ТаблицаПрайсЛиста = ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса(ТабДок);

	
	Если ТаблицаПрайсЛиста.Количество() Тогда 
		ЗагрузитьПрайсЛистПоставщика(ТаблицаПрайсЛиста, ДатаПрайсЛиста, Поставщик);
	Иначе
		СообщениеПользователю = Новый СообщениеПользователю();
		СообщениеПользователю.Текст = "Выбранный файл не содержит строк с ценами!";
		СообщениеПользователю.Сообщить();
	КонецЕсли;
	

КонецПроцедуры // ЗагрузитьИзТабличногоДокументаНаСервере()



&НаСервереБезКонтекста
Функция ПрочитатьФайл(АдресФайлаВХранилище)
	
	ТабДок = Новый ТабличныйДокумент;
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".xlsx");
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВХранилище);
	ДвоичныеДанные.Записать(ИмяВременногоФайла);
	
	Попытка
		Табдок.Прочитать(ИмяВременногоФайла);
	Исключение
		ВызватьИсключение "Не удалость прочитать файл Excel  в табличный документ!";
	КонецПопытки;
	
	Возврат ТабДок;

КонецФункции // ПрочитатьФайл()


&НаСервереБезКонтекста
Процедура ЗагрузитьПрайсЛистПоставщика(ТаблицаПрайсЛиста, ДатаПрайсЛиста, Поставщик)
	
  Запрос = Новый Запрос;
  Запрос.УстановитьПараметр("ТаблицаПрайсЛиста", ТаблицаПрайсЛиста);
  
  Запрос.Текст = 
  "ВЫБРАТЬ
  |	ТаблицаПрайсЛиста.Номенклатура КАК Номенклатура,
  |	ТаблицаПрайсЛиста.Артикул КАК Артикул,
  |	ТаблицаПрайсЛиста.Цена КАК Цена
  |ПОМЕСТИТЬ ВТ_ТаблицаПрайсЛиста
  |ИЗ
  |	&ТаблицаПрайсЛиста КАК ТаблицаПрайсЛиста
  |;
  |
  |////////////////////////////////////////////////////////////////////////////////
  |ВЫБРАТЬ
  |	Ном.Ссылка КАК Номенклатура,
  |	ВТ_ТаблицаПрайсЛиста.Цена КАК Цена
  |ИЗ
  |	ВТ_ТаблицаПрайсЛиста КАК ВТ_ТаблицаПрайсЛиста
  |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Ном
  |		ПО ВТ_ТаблицаПрайсЛиста.Номенклатура = Ном.Наименование
  |			И ВТ_ТаблицаПрайсЛиста.Артикул = Ном.Артикул";
  
  Результат = Запрос.Выполнить();
  Если Результат.Пустой() Тогда 
	  Возврат;
  КонецЕсли;
  
  Выборка = Результат.Выбрать();
  
  ДокументУстановкиЦен = Документы.УстановкаЦенПоставщика.СоздатьДокумент();
  ДокументУстановкиЦен.Контрагент = Поставщик;
  ДокументУстановкиЦен.Дата = ДатаПрайсЛиста;
  
  Пока Выборка.Следующий() Цикл 
	  НоваяСтрокаПрайс = ДокументУстановкиЦен.Товары.Добавить();
	  ЗаполнитьЗначенияСвойств(НоваяСтрокаПрайс ,Выборка);
  КонецЦикла;
  
  Попытка
	  ДокументУстановкиЦен.Записать(РежимЗаписиДокумента.Проведение);
	  
	  СообщениеПользователю = Новый СообщениеПользователю();
	  СообщениеПользователю.Текст = СтрШаблон("Создан и проведен документ установки цен ""%1""!", ДокументУстановкиЦен.Ссылка);
	  СообщениеПользователю.Сообщить(); 
	  
  Исключение
	  ДокументУстановкиЦен.Записать(); 
	  СообщениеПользователю = Новый СообщениеПользователю();
	  СообщениеПользователю.Текст = "Произошла ошибка при проведении документа установки цен!";
	  СообщениеПользователю.Сообщить();
	  
  КонецПопытки;	

КонецПроцедуры // ЗагрузитьПрайсЛистПоставщика()


&НаСервереБезКонтекста
Функция ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса(ТабДок)

	ОбластиТабличногоДокумента = ТабДок.Область(1, 1, ТабДок.ВысотаТаблицы, ТабДок.ШиринаТаблицы);
	Построитель = Новый ПостроительЗапроса;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластиТабличногоДокумента);
	Построитель.Выполнить();
	
	ТаблицаПрайсЛиста = Построитель.Результат.Выгрузить();
	
	Возврат ТаблицаПрайсЛиста;

КонецФункции // ЗаполнитьТаблицуЗначенийЧерезПостроительЗапроса()


	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	



