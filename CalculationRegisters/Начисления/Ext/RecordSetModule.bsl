Процедура РассчитатьСуммуНачисления()Экспорт
	
	ДнейБольничногоЗаСчетРаботадателя = 3;

	Для Каждого Движение Из ЭтотОбъект Цикл
		
		Если Движение.ВидРасчета = ПланыВидовРасчета.Начисления.Оклад Тогда 
			Оклад = Движение.ПоказательРасчета;
			ОтработаноЧасов = Движение.ПолучитьДанныеГрафика(ВидПериодаРегистраРасчета.ФактическийПериодДействия).Итог("КоличествоЧасов");
			НормаЧасов = Движение.ПолучитьДанныеГрафика(ВидПериодаРегистраРасчета.ПериодДействия).Итог("КоличествоЧасов");
			РезультатРасчета = Оклад * ОтработаноЧасов / НормаЧасов;
			Движение.Сумма = РезультатРасчета;
			ЭтотОбъект.Записать(,Истина);
		ИначеЕсли Движение.ВидРасчета = ПланыВидовРасчета.Начисления.Больничный Тогда
			Оклад = Движение.ПоказательРасчета;
			СтоимостьДняПоБолезни = Оклад * 24 /730;
			КоличествоДнейБолезни = (КонецДня(Движение.ПериодДействияКонец) + 1 - Движение.ПериодДействияНачало) / 86400;
			Если КоличествоДнейБолезни <= ДнейБольничногоЗаСчетРаботадателя Тогда 
				РезультатРасчета = КоличествоДнейБолезни * СтоимостьДняПоБолезни;
				ДнейБольничногоЗаСчетРаботадателя = ДнейБольничногоЗаСчетРаботадателя - КоличествоДнейБолезни;
			Иначе 
				РезультатРасчета = ДнейБольничногоЗаСчетРаботадателя * СтоимостьДняПоБолезни;
				ДнейБольничногоЗаСчетРаботадателя = 0;
				КонецЕсли;
			Движение.Сумма = РезультатРасчета;
			ЭтотОбъект.Записать(,Истина);
			
		ИначеЕсли Движение.ВидРасчета.Предопределенный = Ложь Тогда 
			РезультатРасчета = Неопределено;
			ФормулаРасчета = Движение.ВидРасчета.ФормулаРасчета;
			Выполнить(ФормулаРасчета);
			Движение.Сумма = РезультатРасчета;
			ЭтотОбъект.Записать(,Истина);
		Иначе 
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = СтрШаблон("Для вида расчета %1 не задана формула расчета!", Движение.ВидРасчета);
			СообщениеПользователю.Сообщить();
		КонецЕсли;
	КонецЦикла;
	

КонецПроцедуры // РассчитатьСуммуНачисления()


















































