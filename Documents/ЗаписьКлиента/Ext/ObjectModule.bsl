
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ЗаказыКлиентов.Записывать = Истина;	
	Движение = Движения.ЗаказыКлиентов.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.ЗаписьКлиента = Ссылка;
	Движение.ДатаЗаписи = ДатаЗаписи;
	Движение.Сумма = Услуги.Итог("Стоимость");
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(АвторДокумента) Тогда 
		АвторДокумента = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ссылка) И УслугаОказана = Ложь Тогда 
		ПроверитьОказаниеУслуг();
	КонецЕсли;
	
	ДлительностьУслуги = РассчитатьДатуОкончанияЗаписи();
	Если ДлительностьУслуги = 0 Тогда 
		ДлительностьУслуги = 60;
	КонецЕсли;
	ДатаОкончанияЗаписи = ДатаЗаписи + ДлительностьУслуги*60;
		
КонецПроцедуры 
	
	
Процедура ПроверитьОказаниеУслуг()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", Ссылка);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровИУслуг.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг КАК РеализацияТоваровИУслуг
	|ГДЕ
	|	РеализацияТоваровИУслуг.ДокументОснование = &ДокументОснование
	|	И РеализацияТоваровИУслуг.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслуг.Ссылка";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		УслугаОказана = Истина;
		Док = Ссылка.ПолучитьОбъект();
		Док.Записать(РежимЗаписиДокумента.Проведение)
	КонецЕсли;
	
		
КонецПроцедуры // ПроверитьОказаниеУслуг()
	
	

Функция РассчитатьДатуОкончанияЗаписи()
	
	ТЧУслуги = Услуги.Выгрузить(,"Услуга");
	
	Запрос =Новый Запрос;
	Запрос.УстановитьПараметр("ТЧУслуги", ТЧУслуги);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧУслуги.Услуга КАК Услуга
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	&ТЧУслуги КАК ТЧУслуги
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Ном.ДлительностьУслуги) КАК ДлительностьУслуги
	|ИЗ
	|	Справочник.Номенклатура КАК Ном
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Номенклатура КАК ВТ_Номенклатура
	|		ПО Ном.Ссылка = ВТ_Номенклатура.Услуга";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда 
		Возврат 0;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ДлительностьУслуги;
	
	
КонецФункции // РассчитатьДатуОкончанияЗаписи()
