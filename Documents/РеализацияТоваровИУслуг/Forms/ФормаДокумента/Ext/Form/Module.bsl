
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.АвторДокумента) Тогда 
		Объект.АвторДокумента = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	РассчитатьСуммуДокумента();
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.СтатусОплаты = Перечисления.ВидыОплатыДокумента.НеОплачен;
	Иначе 
		Если Объект.СтатусОплаты <> Перечисления.ВидыОплатыДокумента.ПолностьюОплачен Тогда 
			СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПроверитьОплатуДокумента(Объект.Ссылка);
			Объект.СтатусОплаты = СтруктураОплаты.СтатусОплаты;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("Основание")
		И ЗначениеЗаполнено(Параметры.Основание) Тогда 
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументОснование", Объект.ДокументОснование);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РеализацияТоваровИУслугУслуги.Ссылка.Проведен КАК Проведен,
		|	РеализацияТоваровИУслугУслуги.Ссылка.ДокументОснование КАК ДокументОснование,
		|	РеализацияТоваровИУслугУслуги.Услуга.Наименование КАК УслугаНаименование,
		|	РеализацияТоваровИУслугУслуги.Ссылка.Дата КАК Дата,
		|	РеализацияТоваровИУслугУслуги.Ссылка.Клиент КАК Клиент
		|ИЗ
		|	Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
		|ГДЕ
		|	РеализацияТоваровИУслугУслуги.Ссылка.ДокументОснование = &ДокументОснование";
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		
		Если Не Результат.Пустой()И Выборка.Проведен = Ложь Тогда // Сообщение и отказ для непроведённого документа
			СообщениеПользователю = Новый СообщениеПользователю();
			СообщениеПользователю.Текст = 
			СтрШаблон("Документ ""Реализации товаров и услуг"" для данного заказа ""%1"" уже создан!", Объект.ДокументОснование);
			СообщениеПользователю.Сообщить();
			Отказ = Истина;
			Возврат;
			
		ИначеЕсли Не Результат.Пустой()И Выборка.Проведен Тогда // Сообщение и отказ для  проведённого докумета (с оказанной услугой)
 
			СообщениеПользователю = Новый СообщениеПользователю();
			СообщениеПользователю.Текст = 
			СтрШаблон(" Услуга ""%1"" и др. для клиента %2 на дату %3 уже была обработана или не была найдена такая запись!", Выборка.УслугаНаименование, Выборка.Клиент, Выборка.Дата);
			СообщениеПользователю.Сообщить();
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТоварыТоварыПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;
	Если ЗначениеЗаполнено(СтрокаТЧ.Товар) Тогда
		СтрокаТЧ.Цена = РаботаСЦенами.ПолучитьЦенуТовараУслуги(СтрокаТЧ.Товар);
	Иначе 
		СтрокаТЧ.Цена = 0;
	КонецЕсли;
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);
	РассчитатьСуммуДокумента();
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиУслугаПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;
	Если ЗначениеЗаполнено(СтрокаТЧ.Услуга) Тогда 
		СтрокаТЧ.Стоимость = РаботаСЦенами.ПолучитьЦенуТовараУслуги(СтрокаТЧ.Услуга);
	Иначе СтрокаТЧ.Стоимость = 0;
	КонецЕсли;
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;
	РаботаСТабличнымиЧастями.ПересчитатьСуммуВСтрокеТабличнойЧасти(СтрокаТЧ);
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСуммуДокумента()
	
	Объект.ОбщаяСумма = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Стоимость");
	
КонецПроцедуры
