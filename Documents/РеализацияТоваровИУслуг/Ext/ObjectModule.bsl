
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;
	Движения.ЗаказыКлиентов.Записывать = Истина;
	Движения.УчетЗатрат.Записывать = Истина;
	Движения.Хозрасчетный.Записывать = Истина;
	
	Движения.ТоварыНаСкладах.Записать();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	ЭлементБлокировки.ИсточникДанных =Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Товар");	
	Блокировка.Заблокировать();
	
	ЗапретПроведения = Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровИУслугТовары.Товар КАК Номенклатура,
	|	РеализацияТоваровИУслугТовары.Ссылка.Склад КАК Склад,
	|	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	|	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	|ГДЕ
	|	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугТовары.Товар,
	|	РеализацияТоваровИУслугТовары.Ссылка.Склад
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровИУслугУслуги.Услуга,
	|	NULL,
	|	1,
	|	СУММА(РеализацияТоваровИУслугУслуги.Стоимость)
	|ИЗ
	|	Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
	|ГДЕ
	|	РеализацияТоваровИУслугУслуги.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровИУслугУслуги.Услуга
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТ_Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ВТ_Товары.Номенклатура.Представление КАК НоменклатураПредставление,
	|	ВТ_Товары.Количество КАК КоличествоВДокументе,
	|	ВТ_Товары.Сумма КАК СуммаВДокументе,
	|	ВТ_Товары.Склад КАК Склад,
	|	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ВТ_Товары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ВТ_Товары.Номенклатура.СчетБухгалтерскогоУчета КАК СчетБухгалтерскогоУчета
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				&МоментВремени,
	|				(Номенклатура, Склад) В
	|					(ВЫБРАТЬ
	|						ВТ_Товары.Номенклатура,
	|						ВТ_Товары.Склад
	|					ИЗ
	|						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	|		ПО ВТ_Товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|			И ВТ_Товары.Склад = ТоварыНаСкладахОстатки.Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.СрокГодности
	|ИТОГИ
	|	МАКСИМУМ(КоличествоВДокументе),
	|	МАКСИМУМ(СуммаВДокументе),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	Номенклатура";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		Если ВыборкаНоменклатура.ЭтоТовар Тогда
			
			СтоимостьОбщая = 0;
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
			
			Если Превышение >0 И ЗапретПроведения = Истина Тогда //Сообщение при запрете проведения при отрицательных остатках, Отказ на проведение 
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("Превышение остатка по номенклатуре ""%1""  в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
				Сообщение.Сообщить();
				Отказ = Истина;
			ИначеЕсли Превышение >0 И ЗапретПроведения = Ложь Тогда //Сообщение при снятии запрета на проведение при отрицательных остатках
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон("При проведениии по номенклатуре ""%1""  образуются отрицательные остатки в количестве ""%2""", ВыборкаНоменклатура.НоменклатураПредставление, Превышение);
				Сообщение.Сообщить();
			КонецЕсли;
			
			Если Отказ Тогда 
				Продолжить;
			КонецЕсли;
			
			ВсегоСписали = 0; //Переменная для подсчёта списанной номенклатуры до превышения
			
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
			
			ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
			
			Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл
				
				Списываем = Мин(ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);
				
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальные.Номенклатура;
				Движение.Склад = ВыборкаДетальные.Склад;
				Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
				Движение.Количество = Списываем;
				
				Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда 
					СуммаСписания = ВыборкаДетальные.СуммаОстаток;
				Иначе 
					СуммаСписания = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
				КонецЕсли;
				Движение.Сумма = СуммаСписания;
				
				ОсталосьСписать = ОсталосьСписать - Списываем;
				СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;
				ВсегоСписали = ВсегоСписали + Списываем;
								
			КонецЦикла;
			
			Если ОсталосьСписать > 0 Тогда
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Списываем = ОсталосьСписать;
				
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
				Движение.Склад = ВыборкаНоменклатура.Склад;
				Движение.Количество = Списываем;
				СуммаСписания = Списываем * (СтоимостьОбщая / ВсегоСписали); //Вычисляем Сумму списания после превышения остатка(от средней цены на складе)
				
				СтоимостьОбщая = СтоимостьОбщая + СуммаСписания; //Пересчитываем при превышении остатков номенклатуры
				Движение.Сумма = СуммаСписания;

			КонецЕсли;
			
			//Проводка по списанию товаров и материалов ДТ90 КТ10/41
			Движение = Движения.Хозрасчетный.Добавить();
			Движение.СчетДт = ПланыСчетов.Хозрасчетный.Продажи;
			Движение.СчетКт = ВыборкаНоменклатура.СчетБухгалтерскогоУчета;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ВыборкаНоменклатура.Номенклатура;
			Движение.Период = Дата;
			Движение.Сумма = СтоимостьОбщая;
			Движение.Содержание = "Списана себестоимость товарно-материальных ценностей";
			
			
			Движение = Движения.УчетЗатрат.Добавить();
			Движение.Период = Дата;
			Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
			Движение.Сумма = СтоимостьОбщая;
			
		Иначе
			
			Если НЕ ДокументОснование.Пустая() Тогда 
				
				Движение = Движения.ЗаказыКлиентов.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Клиент = Клиент;
				Движение.ДатаЗаписи = Дата;
				Движение.ЗаписьКлиента = ДокументОснование;
				Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
			КонецЕсли;
			
		КонецЕсли;
		
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.Сотрудник = Сотрудник;
		Движение.Клиент = Клиент;
		Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
		
	КонецЦикла;
	
	//Проводка по отражению выручки Дт62 Кт90
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Продажи;
	БухгалтерскийУчет.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, Клиент);
	Движение.Период = Дата;
	Движение.Сумма = ОбщаяСумма;
	Движение.Содержание = "Отражена выручка от реализации товаров и услуг";
	
	
	
	
	//Для Каждого ТекСтрокаТовары Из Товары Цикл
	//	Движение = Движения.ТоварыНаСкладах.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	//	Движение.Период = Дата;
	//	Движение.Номенклатура = ТекСтрокаТовары.Товар;
	//	Движение.Склад = Склад;
	//	Движение.Количество = ТекСтрокаТовары.Количество;
	//	
	//	Движение = Движения.Продажи.Добавить();
	//	Движение.Период = Дата;
	//	Движение.Номенклатура = ТекСтрокаТовары.Товар;
	//	Движение.Клиент = Клиент;
	//	Движение.Сотрудник = Сотрудник;
	//	Движение.Сумма = ТекСтрокаТовары.Сумма;
	//КонецЦикла;
	//
	//// регистр Продажи 
	//Движения.Продажи.Записывать = Истина;
	//Для Каждого ТекСтрокаУслуги Из Услуги Цикл
	//	Движение = Движения.Продажи.Добавить();
	//	Движение.Период = Дата;
	//	Движение.Номенклатура = ТекСтрокаУслуги.Услуга;
	//	Движение.Клиент = Клиент;
	//	Движение.Сотрудник = Сотрудник;
	//	Движение.Сумма = ТекСтрокаУслуги.Стоимость;
	//КонецЦикла;
	//
	//// регистр ЗаказыКлиентов Расход
	//Движения.ЗаказыКлиентов.Записывать = Истина;
	//Если ЗначениеЗаполнено(ДокументОснование)Тогда 
	//	Движение = Движения.ЗаказыКлиентов.Добавить();
	//	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	//	Движение.Период = Дата;
	//	Движение.Клиент = Клиент;
	//	Движение.ДатаЗаписи = ДатаДокумента;
	//	Движение.ЗаписьКлиента = ДокументОснование;
	//	Движение.Сумма = Услуги.Итог("Стоимость");
	//	
	//КонецЕсли;
	
КонецПроцедуры



Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаписьКлиента") Тогда
		Дата = ДанныеЗаполнения.ДатаЗаписи;
		Клиент = ДанныеЗаполнения.Клиент;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		
		Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Стоимость = ТекСтрокаУслуги.Стоимость;
			НоваяСтрока.Услуга = ТекСтрокаУслуги.Услуга;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(АвторДокумента) Тогда 
		АвторДокумента = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли; 
	
	
	
	Если ЗначениеЗаполнено(Ссылка)
		И СтатусОплаты <> Перечисления.ВидыОплатыДокумента.ПолностьюОплачен Тогда
		СтруктураОплаты = Документы.РеализацияТоваровИУслуг.ПроверитьОплатуДокумента(Ссылка);
		СтатусОплаты = СтруктураОплаты.СтатусОплаты;
		КонецЕсли;
		
	КонецПроцедуры
